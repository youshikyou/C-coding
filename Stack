#include <stdio.h>
#include <ctype.h>

#define MAX_LEN 1000
#define EMPTY -1
#define FULL (MAX_LEN-1)

typedef struct stack {
    char s[MAX_LEN];
    int top;} stack;
    
void reset(stack *stk){
  stk->top = EMPTY;
}

void push(char c, stack *stk){
  stk->top++;
  stk->s[stk->top]=c;
}

char pop(stack *stk){

  return stk->s[stk->top--];  //get s[stk->top] then top-- , very critial.
}

char top(const stack *stk){
  return stk->s[stk->top];
}

int is_empty(const stack *stk){
  return (stk->top ==EMPTY);
}

int is_full(const stack *stk){
  return (stk->top ==FULL);
}

int main() {

	stack stack_of_char;
	const char *str = "I am Goat";
	char stack_back[10];

	reset(&stack_of_char);
	int i = 0;
	printf("original is : %s\n", str);
	while (str[i] != '\0') {
		push(str[i++], &stack_of_char);  // remember str[i], then i++
	}
	i = 0;
	
	while (!is_empty(&stack_of_char) && i < 14) {
		stack_back[i++] = pop(&stack_of_char);
	}
	
	printf("reverse is: %s\n", stack_back);


	return 0;
}


